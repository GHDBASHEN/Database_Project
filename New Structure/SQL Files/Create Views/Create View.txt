queries

SELECT s.student_id, u.first_name, u.last_name, ca.Status, ca.Date
FROM students s
JOIN users u ON s.user_id = u.user_id
JOIN course_attendence ca ON s.student_id = ca.student_id
JOIN courses c ON ca.course_code = c.code
WHERE s.batch_year = 'YourBatchYear'
AND c.code = 'YourCourseCode';


SELECT 
    s.student_id, 
    u.first_name, 
    u.last_name,
    c.code as course_code,
    CONCAT(ROUND((COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100), 2), '%') AS attendance_percentage
FROM students s
JOIN users u ON s.user_id = u.user_id
JOIN course_attendence ca ON s.student_id = ca.student_id
JOIN courses c ON ca.course_code = c.code
WHERE s.batch_year = '2017'
GROUP BY s.student_id, u.first_name, u.last_name, c.code;


////  views /////


-- attendence --- 

CREATE OR REPLACE VIEW attendance_summary_2017 AS
SELECT 
    s.student_id, 
    u.first_name, 
    u.last_name,
    c.code as course_code,
    CONCAT(ROUND((COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100), 2), '%') AS attendance_percentage,
    s.batch_year
FROM students s
JOIN users u ON s.user_id = u.user_id
JOIN course_attendence ca ON s.student_id = ca.student_id
JOIN courses c ON ca.course_code = c.code
WHERE s.batch_year = '2017'
GROUP BY s.student_id, u.first_name, u.last_name, c.code, s.batch_year;



CREATE OR REPLACE VIEW attendance_summary_2018 AS
SELECT 
    s.student_id, 
    u.first_name, 
    u.last_name,
    c.code as course_code,
    CONCAT(ROUND((COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100), 2), '%') AS attendance_percentage,
    s.batch_year
FROM students s
JOIN users u ON s.user_id = u.user_id
JOIN course_attendence ca ON s.student_id = ca.student_id
JOIN courses c ON ca.course_code = c.code
WHERE s.batch_year = '2018'
GROUP BY s.student_id, u.first_name, u.last_name, c.code, s.batch_year;



CREATE OR REPLACE VIEW attendance_summary_2019 AS
SELECT 
    s.student_id, 
    u.first_name, 
    u.last_name,
    c.code as course_code,
    CONCAT(ROUND((COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100), 2), '%') AS attendance_percentage,
    s.batch_year
FROM students s
JOIN users u ON s.user_id = u.user_id
JOIN course_attendence ca ON s.student_id = ca.student_id
JOIN courses c ON ca.course_code = c.code
WHERE s.batch_year = '2017'
GROUP BY s.student_id, u.first_name, u.last_name, c.code, s.batch_year;




CREATE OR REPLACE VIEW attendance_summary_2020 AS
SELECT 
    s.student_id, 
    u.first_name, 
    u.last_name,
    c.code as course_code,
    CONCAT(ROUND((COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100), 2), '%') AS attendance_percentage,
    s.batch_year
FROM students s
JOIN users u ON s.user_id = u.user_id
JOIN course_attendence ca ON s.student_id = ca.student_id
JOIN courses c ON ca.course_code = c.code
WHERE s.batch_year = '2020'
GROUP BY s.student_id, u.first_name, u.last_name, c.code, s.batch_year;


CREATE OR REPLACE VIEW attendance_summary_2021 AS
SELECT 
    s.student_id, 
    u.first_name, 
    u.last_name,
    c.code as course_code,
    CONCAT(ROUND((COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100), 2), '%') AS attendance_percentage,
    s.batch_year
FROM students s
JOIN users u ON s.user_id = u.user_id
JOIN course_attendence ca ON s.student_id = ca.student_id
JOIN courses c ON ca.course_code = c.code
WHERE s.batch_year = '2021'
GROUP BY s.student_id, u.first_name, u.last_name, c.code, s.batch_year;


CREATE OR REPLACE VIEW attendance_summary_2022 AS
SELECT 
    s.student_id, 
    u.first_name, 
    u.last_name,
    c.code as course_code,
    CONCAT(ROUND((COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100), 2), '%') AS attendance_percentage,
    s.batch_year
FROM students s
JOIN users u ON s.user_id = u.user_id
JOIN course_attendence ca ON s.student_id = ca.student_id
JOIN courses c ON ca.course_code = c.code
WHERE s.batch_year = '2022'
GROUP BY s.student_id, u.first_name, u.last_name, c.code, s.batch_year;




// procetures
DELIMITER //

CREATE PROCEDURE GetBatchAttendance(IN batch_year_param INT, IN course_code_param VARCHAR(10))
BEGIN
    SELECT 
        s.student_id, 
        u.first_name, 
        u.last_name,
        c.code as course_code,
        CONCAT(ROUND((COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100), 2), '%') AS attendance_percentage,
        CASE 
            WHEN (COUNT(CASE WHEN ca.Status = 'Present' THEN 1 END) / COUNT(*) * 100) >= 80 THEN 'Eligible'
            ELSE 'Not Eligible'
        END AS eligibility_status
    FROM students s
    JOIN users u ON s.user_id = u.user_id
    JOIN course_attendence ca ON s.student_id = ca.student_id
    JOIN courses c ON ca.course_code = c.code
    WHERE s.batch_year = batch_year_param AND c.code = course_code_param
    GROUP BY s.student_id, u.first_name, u.last_name, c.code;
END //

DELIMITER ;


CALL GetBatchAttendance(2017, 'ICT7890');



// CA Eligibity summary

CREATE OR REPLACE VIEW ca_marks_summary_batch AS
SELECT student_id, course_code, ca_marks
FROM course_marks
WHERE course_code = '2017';








